p2 + s +
geom_text(data = filter(plot, environment == 'short', panel == 'ENS'), mapping = aes(x = 2, y = 925, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '·'), col = 'black')
p2 + s +
geom_text(data = filter(plot, environment == 'short', panel == 'ENS'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black')
ggsave('plots/src/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
p1 + s +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black')
ggsave('plots/orc/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = 300, ymax = 900, alpha = .15),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = 300, ymax = 900, alpha = .15),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = 300, ymax = 900, alpha = .15),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1),
geom_point(size=2),
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.5, lwd=1, linetype=1),
theme_classic(),
scale_y_continuous(name="raw reading time (ms)", limits=c(270, 930)),
scale_x_continuous(name="region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'resumption')),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'resumption')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y')
)
p1 + s +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black')
ggsave('plots/orc/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
p2 + s +
geom_text(data = filter(plot, environment == 'short', panel == 'ENS'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 3, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black')
ggsave('plots/src/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
md <- spr_trim %>%
filter(region2 == 1,
study == '210510_do',
group == 'english')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rrt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
mod_spr_1 %>%
emmeans(~ dependency * environment) %>%
contrast('pairwise', by = 'environment') %>%
summary(by = NULL, adjust = 'holm')
beep(1)
md <- spr_trim %>%
filter(region2 == 2,
study == '210510_do',
group == 'english')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rrt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
# doen region 2
# boundary (singular) fit: see help('isSingular')
# Fixed effects:
#   Estimate Std. Error      df t value Pr(>|t|)
# (Intercept)                           18.909      7.447  82.527   2.539 0.012985 *
# environmentlong                       -1.983      7.723 814.992  -0.257 0.797429
# environmentisland                     26.983      9.589  47.803   2.814 0.007086 **
# dependencypronoun                     24.560      9.479  68.194   2.591 0.011697 *
# environmentlong:dependencypronoun    -16.569     13.173  36.622  -1.258 0.216433
# environmentisland:dependencypronoun  -50.294     14.149  73.771  -3.555 0.000665 ***
saveRDS(mod_spr_1, file='models/orc_spr_rawrt_doen_region2_mod.rds')
cat(capture.output(summary(mod_spr_1)), file = paste('models/orc_spr_rawrt_doen_region1_mod.txt', sep = ''), sep='\n')
mod_spr_1 %>%
emmeans(~ dependency * environment) %>%
contrast('pairwise', by = 'environment') %>%
summary(by = NULL, adjust = 'holm')
beep(1)
library(olsrr)
install.packages('olsrr')
library(olsrr)
ols_test_normality(mod_spr_1)
class(md$rt)
ols_test_normality(mod_spr_1)
qqnorm(resid(mod_spr_1))
qqnorm(resid(mod_spr_1))
?plot.merMod
plot(resid(mod_spr_1),rt)
plot(resid(mod_spr_1), rt)
md <- spr_trim %>%
filter(region2 == 2,
study == '210510_do',
group == 'english')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
# doen region 2
# boundary (singular) fit: see help('isSingular')
# Fixed effects:
#   Estimate Std. Error      df t value Pr(>|t|)
# (Intercept)                          354.140     12.954  85.520  27.338   <2e-16 ***
# environmentlong                       -2.863     12.105 128.014  -0.237   0.8134
# environmentisland                     29.335     15.576  37.188   1.883   0.0675 .
# dependencypronoun                     25.527     16.561  55.505   1.541   0.1289
# environmentlong:dependencypronoun    -19.319     21.131  45.512  -0.914   0.3654
# environmentisland:dependencypronoun  -54.305     24.577  50.547  -2.210   0.0317 *
saveRDS(mod_spr_1, file='models/orc_spr_rawrt_doen_region2_mod.rds')
cat(capture.output(summary(mod_spr_1)), file = paste('models/orc_spr_rawrt_doen_region1_mod.txt', sep = ''), sep='\n')
qqnorm(resid(mod_spr_1))
plot(resid(mod_spr_1), rt)
mod_spr_1 %>%
emmeans(~ dependency * environment) %>%
contrast('pairwise', by = 'environment') %>%
summary(by = NULL, adjust = 'holm')
beep(1)
plot(resid(model_schools_IQ), md$rt)
plot(resid(mod_spr_1), md$rt)
qqmath(mod_spr_1) # check for normality
install.packages('lattice')
library(lattice)
qqmath(mod_spr_1) # check for normality
install.packages(effects)
install.packages('effects')
install.packages('sjPlot')
library(effects)
library(sjPlot)
plot_model(mod_spr_1, type='diag')
install.packages('glmmTMB')
library(glmmTMB)
plot_model(mod_spr_1, type='diag')
plot(resid(mod_spr_1), md$rt) # check for linearity
qqmath(mod_spr_1) # check for normality of residuals
plot_model(mod_spr_1, type='diag')
leveneTest(residuals(mod_spr_1) ~ md$environment * md$dependency)
install.packages('car')
library(car)
leveneTest(residuals(mod_spr_1) ~ md$environment * md$dependency)
qqmath(mod_spr_1, id=0.05) # check for normality of residuals
car::leveneTest(residuals(mod_spr_1) ~ md$environment * md$dependency) # check homogeneity of residual variance (should not be significant)
lattice::qqmath(mod_spr_1, id = 0.05) # check for normality of residuals (identified outliers)
plot(resid(mod_spr_1), md$rt) # check for linearity (should look random)
library(performance)
performance::check_collinearity(mod_spr_1)
performance::r2(mod_spr_1)
performance::check_autocorrelation(mod_spr_1)
performance::check_normality(mod_spr_1)
performance::check_homogeneity(mod_spr_1)
car::leveneTest(residuals(mod_spr_1) ~ md$environment * md$dependency) # check homogeneity of residual variance (should not be significant)
performance::check_homogeneity(mod_spr_1)
performance::check_model(mod_spr_1)
performance::check_model(mod_spr_1)
ggsave('plots/src/spr_check.png', width=10, height=10, dpi=600)
ggsave('plots/orc/spr_check.png', width=10, height=10, dpi=600)
performance::model_performance(mod_spr_1)
plot(resid(mod_spr_1), md$rt) # check for linearity (should look random)
lattice::qqmath(mod_spr_1, id = 0.05) # check for normality of residuals (identified outliers)
car::leveneTest(residuals(mod_spr_1) ~ md$environment * md$dependency) # check homogeneity of residual variance (should not be significant)
mod_spr_1 <- readRDS('models/orc_spr_doen_region1_mod.rds')
performance::check_model(mod_spr_1) # perform checks
ggsave('plots/orc/spr_check.png', width=10, height=10, dpi=600) # save output
performance::model_performance(mod_spr_1)
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=region2, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=region2, y=mean_rt, group=dependency, col=dependency, shape=dependency))
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = 300, ymax = 900, alpha = .15),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = 300, ymax = 900, alpha = .15),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = 300, ymax = 900, alpha = .15),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1),
geom_point(size=2),
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.5, lwd=1, linetype=1),
theme_classic(),
scale_y_continuous(name="raw reading time (ms)", limits=c(270, 930)),
scale_x_continuous(name="region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'resumption')),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'resumption')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y')
)
p1 + s +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'KLE'), mapping = aes(x = 2, y = 920, label = '·'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black')
ggsave('plots/orc/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
md <- spr_trim %>%
filter(region2 == 3,
study == '210510_do',
group == 'english')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
md <- spr_trim %>%
filter(region2 == 2,
study == '210510_do',
group == 'korean')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
saveRDS(mod_spr_1, file='models/orc_spr_rawrt_doko_region2_mod.rds')
cat(capture.output(summary(mod_spr_1)), file = paste('models/orc_spr_rawrt_doko_region2_mod.txt', sep = ''), sep='\n')
performance::check_model(mod_spr_1) # perform checks
ggsave('plots/orc/spr_check.png', width=10, height=10, dpi=600) # save output
ggsave('plots/check_model.png', width=10, height=10, dpi=600) # save output
mod_spr_1 %>%
emmeans(~ dependency * environment) %>%
contrast('pairwise', by = 'environment') %>%
summary(by = NULL, adjust = 'holm')
beep(1)
p1 + s +
geom_text(data = filter(plot, environment == 'island', panel == 'ENS'), mapping = aes(x = 1, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'KLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'short', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'long', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black') +
geom_text(data = filter(plot, environment == 'island', panel == 'MLE'), mapping = aes(x = 2, y = 910, label = '*'), col = 'black')
ggsave('plots/orc/spr_rawrt.png', width=6.5, height=4.5, dpi=600)
md <- spr_trim %>%
filter(region2 == 2,
study == '210510_do',
group == 'mandarin')
hist(md$rt)
qqnorm(md$rt)
md <- md %>%
mutate(dependency = as.factor(dependency),
environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
contrasts(md$dependency)
contrasts(md$environment)
mod_spr_1 <- lmer(rt ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item), data = md)
summary(mod_spr_1)
beep(1)
# dozh region 2
# boundary (singular) fit: see help('isSingular')
# Fixed effects:
#   Estimate Std. Error     df t value Pr(>|t|)
# (Intercept)                           439.15      19.76  56.21  22.221   <2e-16 ***
# environmentlong                        37.46      29.64  36.78   1.264   0.2143
# environmentisland                      39.86      28.87  41.52   1.381   0.1747
# dependencypronoun                     -36.68      21.49  92.77  -1.707   0.0912 .
# environmentlong:dependencypronoun     -37.57      37.22  41.11  -1.009   0.3187
# environmentisland:dependencypronoun   -34.59      35.20  52.20  -0.983   0.3303
saveRDS(mod_spr_1, file='models/orc_spr_rawrt_dozh_region2_mod.rds')
cat(capture.output(summary(mod_spr_1)), file = paste('models/orc_spr_rawrt_dozh_region2_mod.txt', sep = ''), sep='\n')
mod_spr_1 %>%
emmeans(~ dependency * environment) %>%
contrast('pairwise', by = 'environment') %>%
summary(by = NULL, adjust = 'holm')
beep(1)
604-30
1070-175
2370-588
2355-604
1750+60
895+1811
588+1811
355+895
# load packages
library(tidyverse) # for data processing
library(lmerTest) # for mixed-effects modeling
library(readxl) # for reading .xlsx files
library(base64enc) # for converting recordings from base64 to audio files
library(stringdist) # for calculating edit distance on c-test responses
library(hunspell) # for spell checking of c-test responses
library(patchwork) # for plotting
library(jsonlite) # for unpacking json
library(beepr) # for notifications
library(tictoc) # for timing operations
library(ggh4x) # for plotting
library(emmeans) #  for post-hoc tests; see https://marissabarlaz.github.io/portfolio/contrastcoding/
ct <- read_csv('data/ctest_scored.csv', col_types = cols(.default = 'f', accuracy = 'l'))
View(ct)
# load packages
library(tidyverse) # for data processing
library(lmerTest) # for mixed-effects modeling
library(readxl) # for reading .xlsx files
library(base64enc) # for converting recordings from base64 to audio files
library(stringdist) # for calculating edit distance on c-test responses
library(hunspell) # for spell checking of c-test responses
library(patchwork) # for plotting
library(jsonlite) # for unpacking json
library(beepr) # for notifications
library(tictoc) # for timing operations
library(ggh4x) # for plotting
library(emmeans) #  for post-hoc tests; see https://marissabarlaz.github.io/portfolio/contrastcoding/
df <- read_csv('data/data.csv', col_types = cols(.default = 'c')) %>%
select(-audio_data)
ct <- read_csv('data/ctest_scored.csv', col_types = cols(.default = 'f', accuracy = 'l'))
spr <- df %>%
filter(task == 'sprt') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
# filter to critical trials
ds <- spr %>%
filter(!condition %in% c('grammatical', 'ungrammatical')) %>%
mutate(rt = as.numeric(as.character(rt)),
participant = as.factor(participant))
# run fct_drop on 'participant'
ds <- ds %>%
mutate(participant = fct_drop(participant))
# check participants
check <- ds %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
View(check)
# trim based on rt
trim <- ds %>%
filter(rt <= 3000) %>%
filter(rt >= 200) %>%
group_by(study, group, condition, region) %>%
mutate(sd2 = mean(rt, na.rm=T) + (2 * (sd(rt, na.rm=T)))) %>%
ungroup() %>%
mutate(rt = case_when(rt > sd2 ~ sd2, TRUE ~ as.numeric(rt))) %>%
select(-sd2) %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
# check participants
check <- trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
View(check)
plot <- trim %>%
group_by(study, group, participant, acc_rate) %>%
summarise() %>%
ungroup()
# inspect accuracy rates
ggplot(plot, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
# trim based on accuracy
trim <- trim %>%
filter(acc_rate > .5)
# check participants
check <- trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
66/68
2/68
(2/68)*100
(5/72)*100
90+69+76
(1/69)*100
(4/76)*100
spr_crit <- spr %>%
filter(!condition %in% c('grammatical', 'ungrammatical')) %>%
mutate(rt = as.numeric(as.character(rt)),
participant = as.factor(participant)) %>%
mutate(participant = fct_drop(participant))
spr_trim <- spr_crit %>%
filter(rt <= 3000) %>%
filter(rt >= 200)
(198051/210870)*100
100 - 93.9209
210870-198051
(12819/210870)*100
spr_trim <- spr_trim %>%
mutate(region = as.numeric(region)) %>%
mutate(region2 = case_when(study == '210510_do' ~ region - 11,
study == '210510_su' & environment %in% c('short', 'long') ~ region - 8,
study == '210510_su' & environment == 'island' ~ region - 10))
spr_trim <- spr_trim %>%
mutate(stimulus = str_trim(tolower(stimulus))) %>%
mutate(length = nchar(stimulus))
class(spr_trim$length)
class(spr_trim$region)
spr_trim <- spr_trim %>%
mutate(region = as.factor(region))
spr_trim_orc <- spr_trim %>%
filter(study == '210510_do')
mod_spr_rrt_orc <- lmer(rt ~ length + region + (1 | participant), data = spr_trim_orc)
spr_trim_orc <- spr_trim_orc %>%
mutate(rrt = residuals(mod_spr_rrt_orc))
spr_trim_src <- spr_trim %>%
filter(study == '210510_su')
mod_spr_rrt_src <- lmer(rt ~ length + region + (1 | participant), data = spr_trim_src)
spr_trim_src <- spr_trim_src %>%
mutate(rrt = residuals(mod_spr_rrt_src))
spr_trim <- bind_rows(spr_trim_orc, spr_trim_src)
check <- spr_trim %>%
group_by(study, group, condition, region2) %>%
mutate(sd2 = mean(rrt, na.rm = T) + (2 * (sd(rrt, na.rm = T)))) %>%
ungroup() %>%
mutate(extreme = case_when(rrt > sd2 ~ TRUE, TRUE ~ FALSE)) %>%
select(-sd2) %>%
group_by(study) %>%
summarise(mean = mean(extreme, na.rm = TRUE)) %>%
ungroup()
View(check)
check <- spr_trim %>%
group_by(study, group, condition, region2) %>%
mutate(sd2 = mean(rrt, na.rm = T) + (2 * (sd(rrt, na.rm = T)))) %>%
ungroup() %>%
mutate(extreme = case_when(rrt > sd2 ~ TRUE, TRUE ~ FALSE)) %>%
select(-sd2) %>%
group_by(study) %>%
summarise(mean = mean(extreme, na.rm = TRUE) * 100) %>%
ungroup()
# load packages
library(tidyverse) # for data processing
library(lmerTest) # for mixed-effects modeling
library(readxl) # for reading .xlsx files
library(base64enc) # for converting recordings from base64 to audio files
library(stringdist) # for calculating edit distance on c-test responses
library(hunspell) # for spell checking of c-test responses
library(patchwork) # for plotting
library(jsonlite) # for unpacking json
library(beepr) # for notifications
library(tictoc) # for timing operations
library(ggh4x) # for plotting
library(emmeans) #  for post-hoc tests; see https://marissabarlaz.github.io/portfolio/contrastcoding/
cite(emmeans)
cite('emmeans')
cite('lmerTest')
cite('tidyverse')
citation('emmeans')
citation('performance')
