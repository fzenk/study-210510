theme_classic(),
scale_y_continuous(name='Count'),
scale_x_discrete(name='Environment', labels = c('Short', 'Long', 'Island')),
scale_colour_manual(name='Subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'Full NP')),
scale_shape_manual(name='Subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'Full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
ggsave("plots/orc/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
check <- ep %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
temp <- ep %>%
filter(type != 'nontarget') %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup()
ep2 <- ep %>%
filter(participant %in% temp$participant)
check <- ep2 %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
ep3 <- ep2 %>%
mutate(resumption = case_when(str_detect(type, 'resumption') == TRUE ~ TRUE,
TRUE ~ FALSE)) %>%
group_by(study, group, participant) %>%
mutate(resumption_overall = mean(resumption)) %>%
ungroup() %>%
group_by(study, group, environment, participant) %>%
summarise(resumption_environment = mean(resumption),
resumption_overall = mean(resumption_overall)) %>%
ungroup() %>%
mutate_at(c('study', 'group', 'environment', 'participant'), factor) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
check <- ep3 %>%
filter(is.na(environment) == FALSE) %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
ep4 <- ep3 %>%
filter(resumption_overall > 0)
check <- ep4 %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
plot <- ep4 %>%
filter(resumption_environment > 0, is.na(environment) == FALSE) %>%
group_by(study, group, environment, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, environment) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(study, nesting(group, environment),
fill = list(n = 0))
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = n, group = group, label = n),
geom_line(lwd = 1, position = position_dodge(width = .4), col = '#ffb000'),
geom_point(size = 3, position = position_dodge(width = .4), col = '#ffb000', shape = 15),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
theme(text = element_text(size = 12),
legend.position = 'none',
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
plot <- ep3 %>%
filter(is.na(environment) == FALSE) %>%
mutate(resumer = case_when(resumption_environment > 0 ~ TRUE, TRUE ~ FALSE)) %>%
group_by(study, group, environment) %>%
summarise(prc = mean(resumer, na.rm = TRUE) * 100,
sd = sd(resumer, na.rm = TRUE) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
plot <- plot %>%
complete(study, nesting(group, environment),
fill = list(mean = 0, ci = 0))
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = prc, group = group),
geom_line(lwd = 1, position = position_dodge(width = .4), col = '#ffb000'),
geom_point(size = 3, position = position_dodge(width = .4), col = '#ffb000', shape = 15),
geom_errorbar(aes(ymin = prc - ci, ymax = prc + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5, col = '#ffb000',
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name = '% participants'),
theme(text = element_text(size = 12),
legend.position = 'none',
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
s <- list(
aes(x = environment, y = prc, group = group),
geom_line(lwd = 1, position = position_dodge(width = .4), col = '#ffb000'),
geom_point(size = 3, position = position_dodge(width = .4), col = '#ffb000', shape = 15),
geom_errorbar(aes(ymin = prc - ci, ymax = prc + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5, col = '#ffb000',
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name = 'Participants (%)'),
scale_x_discrete(name = 'Environment', labels = c('Short', 'Long', 'Island')),
theme(text = element_text(size = 12),
legend.position = 'none',
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
ggsave("plots/orc/ept_coverage_percent.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_coverage_percent.png", width=6.5, height=2, dpi=600)
spr <- df %>%
filter(task == 'sprt') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
spr_crit <- spr %>%
filter(!condition %in% c('grammatical', 'ungrammatical')) %>%
mutate(rt = as.numeric(as.character(rt)),
participant = as.factor(participant)) %>%
mutate(participant = fct_drop(participant))
spr_trim <- spr_crit %>%
filter(rt <= 3000) %>%
filter(rt >= 200)
spr_trim <- spr_trim %>%
mutate(region = as.numeric(region)) %>%
mutate(region2 = case_when(study == '210510_do' ~ region - 11,
study == '210510_su' & environment %in% c('short', 'long') ~ region - 8,
study == '210510_su' & environment == 'island' ~ region - 10))
spr_trim <- spr_trim %>%
mutate(stimulus = str_trim(tolower(stimulus))) %>%
mutate(length = nchar(stimulus))
class(spr_trim$length)
class(spr_trim$region)
spr_trim <- spr_trim %>%
mutate(region = as.factor(region))
spr_trim_orc <- spr_trim %>%
filter(study == '210510_do')
mod_spr_rrt_orc <- lmer(rt ~ length + region + (1 | participant), data = spr_trim_orc)
spr_trim_orc <- spr_trim_orc %>%
mutate(rrt = residuals(mod_spr_rrt_orc))
spr_trim_src <- spr_trim %>%
filter(study == '210510_su')
mod_spr_rrt_src <- lmer(rt ~ length + region + (1 | participant), data = spr_trim_src)
spr_trim_src <- spr_trim_src %>%
mutate(rrt = residuals(mod_spr_rrt_src))
spr_trim <- bind_rows(spr_trim_orc, spr_trim_src)
check <- spr_trim %>%
group_by(study, group, condition, region2) %>%
mutate(sd2 = mean(rrt, na.rm = T) + (2 * (sd(rrt, na.rm = T)))) %>%
ungroup() %>%
mutate(extreme = case_when(rrt > sd2 ~ TRUE, TRUE ~ FALSE)) %>%
select(-sd2) %>%
group_by(study) %>%
summarise(mean = mean(extreme, na.rm = TRUE) * 100) %>%
ungroup()
spr_trim <- spr_trim %>%
group_by(study, group, condition, region2) %>%
mutate(sd2 = mean(rrt, na.rm = T) + (2 * (sd(rrt, na.rm = T)))) %>%
ungroup() %>%
mutate(rrt = case_when(rrt > sd2 ~ sd2, TRUE ~ as.numeric(rrt))) %>%
select(-sd2)
spr_trim <- spr_trim %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
hist(spr_trim$rrt)
spr_trim <- spr_trim %>%
filter(acc_rate > .5)
check <- spr_trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
plot <- spr_trim %>%
group_by(study, group, participant, acc_rate) %>%
summarise() %>%
ungroup()
ggplot(plot, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
spr_trim <- spr_trim %>%
filter(acc_rate > .5)
check <- spr_trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
plot <- spr_trim %>%
mutate(environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island')) %>%
group_by(study, group, region2, dependency, environment, condition) %>%
summarise(mean_rrt = mean(rrt, na.rm=T),
sd = sd(rrt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
filter(region2 %in% c(-3, -2, -1, 0, 1, 2, 3, 4)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE')) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=region2, y=mean_rrt, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=region2, y=mean_rrt, group=dependency, col=dependency, shape=dependency))
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = -150, ymax = 150, alpha = .1),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1, position = position_dodge(width = .4)),
geom_point(size=3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean_rrt-ci, ymax=mean_rrt+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="RRT (ms)", breaks = seq(-150, 150, by = 50), limits=c(-150, 150)),
scale_x_continuous(name="region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'resumption')),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'resumption')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y')
)
p1 + s
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = -150, ymax = 150, alpha = .1),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1, position = position_dodge(width = .4)),
geom_point(size=3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean_rrt-ci, ymax=mean_rrt+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="RRT (ms)", breaks = seq(-150, 150, by = 50), limits=c(-150, 150)),
scale_x_continuous(name="Region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="Dependency", values=c('#648fff', '#ffb000'), labels=c('Gap', 'RP')),
scale_shape_manual(name="Dependency", values=c(16, 15), labels=c('Gap', 'RP')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y')
)
p1 + s
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = -150, ymax = 150, alpha = .1),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1, position = position_dodge(width = .4)),
geom_point(size=3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean_rrt-ci, ymax=mean_rrt+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="RRT (ms)", breaks = seq(-150, 150, by = 50), limits=c(-150, 150)),
scale_x_continuous(name="Region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="Dependency", values=c('#648fff', '#ffb000'), labels=c('Gap', 'RP')),
scale_shape_manual(name="Dependency", values=c(16, 15), labels=c('Gap', 'RP')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y',
labeller = as_labeller(`short` = 'Short', `long` = 'Long', `island` = 'Island',
`ENS` = 'ENS', `KLE` = 'KLE', `MLE` = 'MLE'))
)
s <- list(
annotate('rect', xmin = 0.6, xmax = 1.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 1.6, xmax = 2.4, ymin = -150, ymax = 150, alpha = .1),
annotate('rect', xmin = 2.6, xmax = 3.4, ymin = -150, ymax = 150, alpha = .1),
geom_hline(yintercept = 0),
geom_vline(xintercept = 0),
geom_line(lwd=1, position = position_dodge(width = .4)),
geom_point(size=3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean_rrt-ci, ymax=mean_rrt+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="RRT (ms)", breaks = seq(-150, 150, by = 50), limits=c(-150, 150)),
scale_x_continuous(name="Region", limits=c(-3.25, 4.25), breaks = c(-3, -2, -1, 0, 1, 2, 3, 4)),
scale_colour_manual(name="Dependency", values=c('#648fff', '#ffb000'), labels=c('Gap', 'RP')),
scale_shape_manual(name="Dependency", values=c(16, 15), labels=c('Gap', 'RP')),
theme(text = element_text(size = 12),
legend.position = 'bottom',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y',
labeller = as_labeller(c(`short` = 'Short', `long` = 'Long', `island` = 'Island',
`ENS` = 'ENS', `KLE` = 'KLE', `MLE` = 'MLE')))
)
p1 + s
ggsave('plots/orc/spr_rrt.png', width=6.5, height=4.5, dpi=600)
p2 + s
ggsave('plots/src/spr_rrt.png', width=6.5, height=4.5, dpi=600)
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate >.5)
ds <- spr %>%
filter(!condition %in% c('grammatical', 'ungrammatical')) %>%
mutate(rt = as.numeric(as.character(rt)),
participant = as.factor(participant))
ds <- ds %>%
mutate(participant = fct_drop(participant))
check <- ds %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
trim <- ds %>%
filter(rt <= 3000) %>%
filter(rt >= 200) %>%
group_by(study, group, condition, region) %>%
mutate(sd2 = mean(rt, na.rm=T) + (2 * (sd(rt, na.rm=T)))) %>%
ungroup() %>%
mutate(rt = case_when(rt > sd2 ~ sd2, TRUE ~ as.numeric(rt))) %>%
select(-sd2) %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
check <- trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
plot <- trim %>%
group_by(study, group, participant, acc_rate) %>%
summarise() %>%
ungroup()
ggplot(plot, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
trim <- trim %>%
filter(acc_rate > .5)
check <- trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
plot <- trim %>%
mutate(environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island')) %>%
group_by(study, group, region, dependency, environment, condition) %>%
summarise(mean_rt = mean(rt, na.rm=T),
sd = sd(rt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
filter(region %in% c(7, 8, 9, 10, 11, 12, 13, 14, 15)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE')) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
p1a <- ggplot(data=filter(plot, study == '210510_do', environment == 'short'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p1b <- ggplot(data=filter(plot, study == '210510_do', environment == 'long'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p1c <- ggplot(data=filter(plot, study == '210510_do', environment == 'island'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p2a <- ggplot(data=filter(plot, study == '210510_su', environment == 'short'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p2b <- ggplot(data=filter(plot, study == '210510_su', environment == 'long'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
p2c <- ggplot(data=filter(plot, study == '210510_su', environment == 'island'), aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency))
s <- list(
geom_line(lwd=1),
geom_point(size=2),
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.5, lwd=1, linetype=1),
theme_classic(),
scale_y_continuous(name="mean reading time (ms)", limits=c(300, 850)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'resumption')),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'resumption')),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5)),
facet_grid2(vars(panel), vars(environment), axes = 'all', remove_labels = 'y')#,
#geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), data = f_labels, alpha = .15)
)
p1a + s +
theme(legend.position = 'none',
strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x = element_blank()) +
annotate('rect', xmin = 4.5, xmax = 7.5, ymin = 300, ymax = 850, alpha = .15) +
scale_x_discrete(name="region", limits=c('8', '9', '10', '11', '12', '13', '14', '15')) +
p1b + s +
theme(legend.position = 'none',
axis.title.y = element_blank(),
strip.background.y = element_blank(),
strip.text.y = element_blank()) +
annotate('rect', xmin = 4.5, xmax = 7.5, ymin = 300, ymax = 850, alpha = .15) +
scale_x_discrete(name="region", limits=c('8', '9', '10', '11', '12', '13', '14', '15')) +
p1c + s +
theme(legend.position = c(-.8, -.15),
legend.direction = 'horizontal',
legend.margin = margin(t = 0, unit='cm'),
plot.margin = margin(b = 12),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
annotate('rect', xmin = 4.5, xmax = 7.5, ymin = 300, ymax = 850, alpha = .15) +
scale_x_discrete(name="region", limits=c('8', '9', '10', '11', '12', '13', '14', '15'))
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate >.5)
plot <- trim %>%
mutate(accuracy = as.logical(accuracy)) %>%
group_by(study, group, participant, item, dependency, environment, accuracy) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, dependency, environment) %>%
summarise(mean = mean(accuracy, na.rm=T) * 100,
sd = sd(accuracy, na.rm=T) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
s <- list(
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_x_discrete(name="environment", limits = c("short", "long", "island"), labels = c("short", "long", "island")),
scale_y_continuous(name="% accuracy", limits=c(70, 100)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c("gap", "resumption")),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c("gap", "resumption")),
theme(text = element_text(size = 12),
axis.title.y = element_text(margin=margin(r=-3)),
legend.margin=margin(0, 0, 0, -5)),
facet_wrap(~panel)
)
p1 + s
s <- list(
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0, lwd=5, linetype=1, alpha = .5, position = position_dodge(width = .4)),
theme_classic(),
scale_x_discrete(name="Environment", limits = c("short", "long", "island"), labels = c("Short", "Long", "Island")),
scale_y_continuous(name="Accuracy (%)", limits=c(70, 100)),
scale_colour_manual(name="Dependency", values=c('#648fff', '#ffb000'), labels=c("Gap", "RP")),
scale_shape_manual(name="Dependency", values=c(16, 15), labels=c("Gap", "RP")),
theme(text = element_text(size = 12),
axis.title.y = element_text(margin=margin(r=-3)),
legend.margin=margin(0, 0, 0, -5)),
facet_wrap(~panel)
)
p1 + s
ggsave("plots/orc/spr_accuracy.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/spr_accuracy.png", width=6.5, height=2.5, dpi=600)
