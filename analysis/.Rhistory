annotate('rect', xmin = 2.5, xmax = 5.5, ymin = 300, ymax = 850, alpha = .15) +
scale_x_discrete(name="region", limits=c('7', '8', '9', '10', '11', '12', '13', '14')) +
p2c + s +
theme(legend.position = c(-.8, -.15),
legend.direction = 'horizontal',
legend.margin = margin(t = 0, unit='cm'),
plot.margin = margin(b = 12),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
annotate('rect', xmin = 4.5, xmax = 7.5, ymin = 300, ymax = 850, alpha = .15) +
scale_x_discrete(name="region", limits=c('7', '8', '9', '10', '11', '12', '13', '14'))
#summarize data for plotting by group
plot <- trim %>%
mutate(accuracy = as.logical(accuracy)) %>%
group_by(study, group, participant, item, dependency, environment, accuracy) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, dependency, environment) %>%
summarise(mean = mean(accuracy, na.rm=T) * 100,
sd = sd(accuracy, na.rm=T) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
# create plot
s <- list(
geom_line(lwd = 1),
geom_point(size = 2),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.2, lwd=1, linetype=1),
theme_classic(),
scale_x_discrete(name="environment", limits = c("short", "long", "island"), labels = c("short", "long", "island")),
scale_y_continuous(name="% accuracy", limits=c(68, 100)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c("gap", "resumption")),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c("gap", "resumption")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right",
legend.margin=margin(0, 0, 0, 0),
legend.box.margin = margin(0, 0, 0, 0)),
facet_wrap(~panel)
)
p1 + s
p2 + s
temp <- trim %>%
mutate(region = as.numeric(region)) %>%
mutate(region2 = case_when(study == '210510_do' ~ region - 11,
study == '210510_su' & environment %in% c('short', 'long') ~ region - 8,
study == '210510_su' & environment == 'island' ~ region - 10))
md <- temp %>%
filter(dependency == 'pronoun', region2 == '0') %>%
mutate(logrt = log(rt)) %>%
group_by(study, group, participant, item, environment, dependency) %>%
summarise(logrt = mean(logrt)) %>%
ungroup()
View(md)
md <- md %>%
filter(study == '210510_do')
# summarise for plotting with logrts
plot <- md %>%
group_by(group, environment) %>%
summarise(mean = mean(logrt, na.rm=T),
sd = sd(logrt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
View(plot)
# facet labels
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
# generate plot
ggplot(data=plot, aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.5, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="logRT", limits=c(5.8, 6.5)) +
scale_x_discrete(name="environment", limits=c("short", "long", "island")) +
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
scale_shape_manual(name="dependency", values=c(16, 15), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(~group, labeller = as_labeller(groups))
# summarise for plotting with logrts
plot <- md %>%
group_by(group, environment, dependency) %>%
summarise(mean = mean(logrt, na.rm=T),
sd = sd(logrt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
# facet labels
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
# generate plot
ggplot(data=plot, aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.5, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="logRT", limits=c(5.8, 6.5)) +
scale_x_discrete(name="environment", limits=c("short", "long", "island")) +
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
scale_shape_manual(name="dependency", values=c(16, 15), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(~group, labeller = as_labeller(groups))
# save plot
ggsave("plots/src/spr_logrt_rp_region.png", width=6.5, height=2.5, dpi=600)
# save plot
ggsave("plots/orc/spr_logrt_rp_region.png", width=6.5, height=2.5, dpi=600)
md2 <- md %>%
filter(group == 'english')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$dependency)
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(group == 'korean')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$dependency)
# view contrasts
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(group == 'mandarin')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
md <- temp %>%
filter(dependency == 'pronoun', region2 == '0') %>%
mutate(logrt = log(rt)) %>%
group_by(study, group, participant, item, environment, dependency) %>%
summarise(logrt = mean(logrt)) %>%
ungroup()
md <- md %>%
filter(study == '210510_su')
# summarise for plotting with logrts
plot <- md %>%
group_by(group, environment, dependency) %>%
summarise(mean = mean(logrt, na.rm=T),
sd = sd(logrt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
# facet labels
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
# generate plot
ggplot(data=plot, aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.5, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="logRT", limits=c(5.8, 6.5)) +
scale_x_discrete(name="environment", limits=c("short", "long", "island")) +
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
scale_shape_manual(name="dependency", values=c(16, 15), limits=c('gap', 'pronoun'), labels=c('gap', 'resumption')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(~group, labeller = as_labeller(groups))
# save plot
ggsave("plots/orc/spr_logrt_rp_region.png", width=6.5, height=2.5, dpi=600)
md2 <- md %>%
filter(group == 'english')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(group == 'mandarin')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(group == 'korean')
check <- md2 %>%
group_by(participant) %>%
summarise(rt = mean(rt, na.rm = T)) %>%
ungroup()
# check distribution
hist(md2$logrt)
qqnorm(md2$logrt)
md2 <- md2 %>%
mutate(environment = as.factor(environment))
# relevel 'environment'
md2 <- md2 %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md2$environment)
# full model
model1 <- lmer(logrt ~ environment + (environment|participant) + (environment|item), data = md2)
summary(model1)
beepr::beep(1)
#summarize data for plotting by group
plot <- trim %>%
mutate(accuracy = as.logical(accuracy)) %>%
group_by(study, group, participant, item, dependency, environment, accuracy) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, dependency, environment) %>%
summarise(mean = mean(accuracy, na.rm=T) * 100,
sd = sd(accuracy, na.rm=T) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
# create plot
s <- list(
geom_line(lwd = 1),
geom_point(size = 2),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.2, lwd=1, linetype=1),
theme_classic(),
scale_x_discrete(name="environment", limits = c("short", "long", "island"), labels = c("short", "long", "island")),
scale_y_continuous(name="% accuracy", limits=c(68, 100)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c("gap", "resumption")),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c("gap", "resumption")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right",
legend.margin=margin(0, 0, 0, 0),
legend.box.margin = margin(0, 0, 0, 0)),
facet_wrap(~panel)
)
p1 + s
p2 + s
# trim based on accuracy
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate < .5)
#summarize data for plotting by group
plot <- trim %>%
mutate(accuracy = as.logical(accuracy)) %>%
group_by(study, group, participant, item, dependency, environment, accuracy) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, dependency, environment) %>%
summarise(mean = mean(accuracy, na.rm=T) * 100,
sd = sd(accuracy, na.rm=T) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
# create plot
s <- list(
geom_line(lwd = 1),
geom_point(size = 2),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.2, lwd=1, linetype=1),
theme_classic(),
scale_x_discrete(name="environment", limits = c("short", "long", "island"), labels = c("short", "long", "island")),
scale_y_continuous(name="% accuracy", limits=c(68, 100)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c("gap", "resumption")),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c("gap", "resumption")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right",
legend.margin=margin(0, 0, 0, 0),
legend.box.margin = margin(0, 0, 0, 0)),
facet_wrap(~panel)
)
p1 + s
View(plot)
# trim based on accuracy
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate < .5)
View(trim)
# trim based on accuracy
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate >.5)
#summarize data for plotting by group
plot <- trim %>%
mutate(accuracy = as.logical(accuracy)) %>%
group_by(study, group, participant, item, dependency, environment, accuracy) %>%
summarise() %>%
ungroup() %>%
group_by(study, group, dependency, environment) %>%
summarise(mean = mean(accuracy, na.rm=T) * 100,
sd = sd(accuracy, na.rm=T) * 100,
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=environment, y=mean, group=dependency, col=dependency, shape=dependency))
# create plot
s <- list(
geom_line(lwd = 1),
geom_point(size = 2),
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=.2, lwd=1, linetype=1),
theme_classic(),
scale_x_discrete(name="environment", limits = c("short", "long", "island"), labels = c("short", "long", "island")),
scale_y_continuous(name="% accuracy", limits=c(68, 100)),
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c("gap", "resumption")),
scale_shape_manual(name="dependency", values=c(16, 15), labels=c("gap", "resumption")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right",
legend.margin=margin(0, 0, 0, 0),
legend.box.margin = margin(0, 0, 0, 0)),
facet_wrap(~panel)
)
p1 + s
ggsave("plots/orc/spr_accuracy.png", width=6.5, height=2.5, dpi=600)
p2 + s
ggsave("plots/src/spr_accuracy.png", width=6.5, height=2.5, dpi=600)
trim <- ds %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup() %>%
filter(acc_rate >.5)
md <- trim %>%
mutate(dependency = fct_drop(dependency),
environment = fct_drop(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
# view contrasts
contrasts(md$dependency)
contrasts(md$environment)
md <- md %>%
filter(study == '210510_do')
# view contrasts
contrasts(md$dependency)
contrasts(md$environment)
md <- trim %>%
mutate(dependency = fct_drop(dependency),
environment = fct_drop(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
md <- md %>%
filter(study == '210510_do', group == 'english')
# view contrasts
contrasts(md$dependency)
contrasts(md$environment)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (1|participant) + (1|item),
data = md, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
str(md)
str(md$participant)
str(md$item)
md <- trim %>%
mutate(dependency = fct_drop(dependency),
environment = fct_drop(environment),
accuracy = as.logical(accuracy),
participant = as.factor(participant),
item = as.factor(item)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
md <- md %>%
filter(study == '210510_do', group == 'english')
# view contrasts
contrasts(md$dependency)
contrasts(md$environment)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (1|participant) + (1|item),
data = md, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beep(1)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (1|participant) + (1|item),
data = md, family = binomial)
summary(model1)
beep(1)
md <- trim %>%
mutate(dependency = fct_drop(dependency),
environment = fct_drop(environment),
accuracy = as.logical(accuracy),
participant = as.factor(participant),
item = as.factor(item)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
md2 <- md %>%
filter(study == '210510_do', group == 'korean')
# view contrasts
contrasts(md2$dependency)
contrasts(md2$environment)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (1|participant) + (1|item),
data = md2, family = binomial)
summary(model1)
beep(1)
library(emmeans) # see https://marissabarlaz.github.io/portfolio/contrastcoding/
pairs(emmeans(model1, "dependency", by = "environment"))
beep(1)
md2 <- md %>%
filter(study == '210510_do', group == 'mandarin')
# view contrasts
contrasts(md2$dependency)
contrasts(md2$environment)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (1|participant) + (1|item),
data = md2, family = binomial)
summary(model1)
beep(1)
pairs(emmeans(model1, "dependency", by = "environment"))
beep(1)
md2 <- md %>%
filter(study == '210510_do', group == 'english')
# view contrasts
contrasts(md2$dependency)
contrasts(md2$environment)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item),
data = md2, family = binomial)
summary(model1)
beep(1)
# full model
model1 <- glmer(accuracy ~ environment*dependency + (environment*dependency|participant) + (environment*dependency|item),
data = md2, family = binomial)
summary(model1)
beep(1)
38828 - 754
38828 - 38074
754 * .15
4171 + 113
372 + 754
38828 - 1126
38828-37702
37702+1126
1980 - 2109
