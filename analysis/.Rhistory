plot <- ep4 %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(count)) %>%
ungroup()
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('RP', 'fullNP'),
labels = c('RP', 'other')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('RP', 'fullNP'),
labels = c('RP', 'other')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'other')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'other')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 + s
ggsave("plots/orc/ept_resumption_type_total.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_total.png", width=6.5, height=2, dpi=600)
plot <- ep4 %>%
group_by(study, group, environment, dependency) %>%
summarise(mean = mean(count, na.rm=T),
sd = sd(count, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = mean, group = dependency, col = dependency, shape = dependency),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin = mean - ci, ymax = mean + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5,
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="count"),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'other')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'other')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
ggsave("plots/orc/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'full NP')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 + s
plot <- ep4 %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(count)) %>%
ungroup()
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'full NP')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('RP', 'full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 + s
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count'),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 + s
ggsave("plots/orc/ept_resumption_type_total.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_total.png", width=6.5, height=2, dpi=600)
plot <- ep4 %>%
group_by(study, group, environment, dependency) %>%
summarise(mean = mean(count, na.rm=T),
sd = sd(count, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
plot <- plot %>%
complete(study, nesting(group, environment, dependency),
fill = list(mean = 0, ci = 0))
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = mean, group = dependency, col = dependency, shape = dependency),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin = mean - ci, ymax = mean + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5,
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="count"),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
ggsave("plots/orc/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
s <- list(
aes(x = environment, y = mean, group = dependency, col = dependency, shape = dependency),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin = mean - ci, ymax = mean + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5,
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="mean count"),
scale_colour_manual(name='subtype',
values=c('#ffb000', 'darkorange'),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
scale_shape_manual(name='subtype',
values=c(15, 17),
breaks = c('pronoun', 'fullNP'),
labels = c('pronoun', 'full NP')),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
ggsave("plots/orc/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_resumption_type_count.png", width=6.5, height=2, dpi=600)
library(tidyverse) # for data processing
library(lmerTest) # for mixed-effects modeling
library(readxl) # for reading .xlsx files
library(base64enc) # for converting recordings from base64 to audio files
library(stringdist) # for calculating edit distance on c-test responses
library(hunspell) # for spell checking of c-test responses
library(patchwork) # for plotting
library(jsonlite) # for unpacking json
library(beepr) # for notifications
library(tictoc) # for timing operations
library(ggh4x) # for plotting
library(emmeans) #  for post-hoc tests
library(performance) # for checking model performance
library(kableExtra) # for tables
library(broom) # for tables
library(ordinal) # for clmm models
df <- read_csv('data/data.csv', col_types = cols(.default = 'c')) %>%
select(-audio_data)
ct <- read_csv('data/ctest_scored.csv', col_types = cols(.default = 'f', accuracy = 'l'))
proficiency <- ct %>%
group_by(study, group, participant) %>%
summarise(proficiency = sum(accuracy, na.rm=T)) %>%
ungroup()
ep <- df %>%
filter(task == 'ept') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
check <- ep %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
temp <- ep %>%
filter(type != 'nontarget') %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup()
md <- ep %>%
filter(participant %in% temp$participant)
check <- md %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
check <- md %>%
mutate(type = factor(type))
summary(check$type)
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE),
gap = case_when(type == 'gap' ~ TRUE,
TRUE ~ FALSE),
modified = case_when(type == 'other' ~ TRUE,
TRUE ~ FALSE),
nontarget = case_when(type == 'nontarget' ~ TRUE,
TRUE ~ FALSE)) %>%
pivot_longer(cols = c('resumption', 'gap'), names_to = 'dependency', values_to = 'response2') %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
check <- md %>%
filter(environment %in% c('short', 'long', 'island')) %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(response2)) %>%
ungroup()
View(check)
md2 <- md %>%
filter(environment %in% c('short', 'long', 'island')) %>%
group_by(study, group, participant, environment, dependency) %>%
summarise(count = sum(response2))
plot <- md2 %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(count)) %>%
ungroup()
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count', limits = c(0, 400)),
scale_colour_manual(name='dependency',
values=c('#648fff', '#ffb000', '#648fff', '#ffb000')),
scale_shape_manual(name='dependency',
values=c(16, 15, 16, 15)),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE),
gap = case_when(type == 'gap' ~ TRUE,
TRUE ~ FALSE),
modified = case_when(type == 'other' ~ TRUE,
TRUE ~ FALSE),
nontarget = case_when(type == 'nontarget' ~ TRUE,
TRUE ~ FALSE)) %>%
pivot_longer(cols = c('resumption', 'gap', 'modified', 'nontarget'), names_to = 'dependency', values_to = 'response2') %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
md <- ep %>%
filter(participant %in% temp$participant)
check <- md %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup() %>%
group_by(study, group) %>%
summarise(n = n()) %>%
ungroup()
check <- md %>%
mutate(type = factor(type))
summary(check$type)
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE),
gap = case_when(type == 'gap' ~ TRUE,
TRUE ~ FALSE),
modified = case_when(type == 'other' ~ TRUE,
TRUE ~ FALSE),
nontarget = case_when(type == 'nontarget' ~ TRUE,
TRUE ~ FALSE)) %>%
pivot_longer(cols = c('resumption', 'gap', 'modified', 'nontarget'), names_to = 'dependency', values_to = 'response2') %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
check <- md %>%
filter(environment %in% c('short', 'long', 'island')) %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(response2)) %>%
ungroup()
md2 <- md %>%
filter(environment %in% c('short', 'long', 'island')) %>%
group_by(study, group, participant, environment, dependency) %>%
summarise(count = sum(response2))
plot <- md2 %>%
group_by(study, group, environment, dependency) %>%
summarise(count = sum(count)) %>%
ungroup()
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count', limits = c(0, 400)),
scale_colour_manual(name='dependency',
values=c('#648fff', '#ffb000', '#648fff', '#ffb000')),
scale_shape_manual(name='dependency',
values=c(16, 15, 16, 15)),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count', limits = c(0, 400)),
scale_colour_manual(name='dependency',
values=c('#648fff', 'gray85', 'gray60', '#ffb000')),
scale_shape_manual(name='dependency',
values=c(16, 15, 16, 15)),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
s <- list(
aes(x = environment, y = count, group = dependency, col = dependency, shape = dependency, label = count),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_text(size = 2.5, col = "black", hjust = .5, vjust = -1, position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name='total count', limits = c(0, 400)),
scale_colour_manual(name='dependency',
values=c('#648fff', 'gray85', 'gray60', '#ffb000')),
scale_shape_manual(name='dependency',
values=c(16, 18, 17, 15)),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
p1 + s
ggsave("plots/orc/ept_total_all.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_total_all.png", width=6.5, height=2, dpi=600)
plot <- md2 %>%
group_by(study, group, environment, dependency) %>%
summarise(mean = mean(count, na.rm=T),
sd = sd(count, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup()
p1 <- ggplot(data = filter(plot, study == '210510_do'))
p2 <- ggplot(data = filter(plot, study == '210510_su'))
s <- list(
aes(x = environment, y = mean, group = dependency, col = dependency, shape = dependency),
geom_line(lwd = 1, position = position_dodge(width = .4)),
geom_point(size = 3, position = position_dodge(width = .4)),
geom_errorbar(aes(ymin = mean - ci, ymax = mean + ci),
width = 0, lwd = 5, linetype = 1, alpha = .5,
position = position_dodge(width = .4)),
theme_classic(),
scale_y_continuous(name="count", limits = c(-.05, 5), breaks = c(0, 1, 2, 3, 4, 5)),
scale_colour_manual(name='dependency',
values=c('#648fff', 'gray85', 'gray60', '#ffb000')),
scale_shape_manual(name='dependency',
values=c(16, 18, 17, 15)),
theme(text = element_text(size = 12),
legend.position = 'right',
legend.margin = margin(t = -.4, unit = 'cm'),
plot.title = element_text(size = 12, hjust = .5)),
facet_wrap(~group, labeller = as_labeller(c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')))
)
p1 + s
p1 + s
ggsave("plots/orc/ept_count_all.png", width=6.5, height=2, dpi=600)
p2 + s
ggsave("plots/src/ept_count_all.png", width=6.5, height=2, dpi=600)
summary(md2)
md2 <- md2 %>%
mutate_at(c('study', 'group', 'participant', 'dependency', 'environment'), factor)
summary(md2)
View(md2)
contrasts(md2$dependency) <- contr.treatment(4) - matrix(rep(1/4, 12), ncol=3)
contrasts(md2$environment) <- contr.treatment(3) - matrix(rep(1/3, 6), ncol=2)
contrasts(md2$group) <- contr.treatment(3) - matrix(rep(1/3, 6), ncol=2)
contrasts(md2$dependency)
contrasts(md2$environment)
contrasts(md2$group)
library(glmmTMB) # (https://fcorowe.github.io/countdata_modelling/)
install.packages('TMB', type = 'source')
install.packages('TMB', type = 'source')
detach(package:glmmTMB,unload=TRUE)
install.packages('TMB', type = 'source')
install.packages("TMB", type = "source")
library(glmmTMB) # (https://fcorowe.github.io/countdata_modelling/)
library(glmmTMB) # (https://fcorowe.github.io/countdata_modelling/)
model1 <- glmmTMB(count ~ dependency * environment * group + (1 | participant),
data = filter(md2, study == '210510_do'),
ziformula = ~0,
family = poisson)
