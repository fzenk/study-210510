mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(study, group, participant) %>%
mutate(ppt_score = mean(itm_score)) %>%
ungroup()
# check scores by participant
check <- lev %>%
group_by(run_id, participant, ppt_score) %>%
summarise() %>%
ungroup()
# check scores by participant
check <- lev %>%
group_by(study, group, participant, ppt_score) %>%
summarise() %>%
ungroup()
plot <- lev %>%
filter(participant != 'researcher') %>%
group_by(group, run_id, participant) %>%
summarise(mean = mean(itm_score)) %>%
ungroup() %>%
mutate(group = case_when(group == 'english' ~ 'L1-English',
group == 'korean' ~ 'L1-Korean',
group == 'mandarin' ~ 'L1-Mandarin'))
plot <- lev %>%
filter(participant != 'researcher') %>%
group_by(study, group, participant) %>%
summarise(mean = mean(itm_score)) %>%
ungroup()
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=group, y=mean*100, fill=group, label=participant))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=group, y=mean*100, fill=group, label=participant))
s <- list(
geom_hline(yintercept=50),
geom_violin(fill = 'lightblue'),
geom_boxplot(width = .1, fill='white'),
#geom_jitter(size=1, shape=1, alpha=.25, position = position_jitter(seed=2, width=.15)),
#geom_text(size = 2.5, col = "black", position = position_jitter(seed=2)),
theme_classic(),
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'), labels = c('ENS', 'KLE', 'MLE')),
scale_y_continuous(name="% accuracy",
limits=c(0, 100)),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide")
)
p1 + s
p2 + s
View(plot)
View(lev)
lev <- ct %>%
separate_rows(acceptable, sep = ' ') %>%
mutate(length = case_when(trial_name == 'cloze' ~ str_length(acceptable),
TRUE ~ str_length(exact)),
dist = case_when(trial_name == 'cloze' ~ stringdist(acceptable, response, method = 'lv'),
TRUE ~ stringdist(exact, response, method = 'lv'))) %>%
mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(participant, trial_name, item) %>%
summarize(itm_score = max(itm_score)) %>%
ungroup()
lev <- ct %>%
separate_rows(acceptable, sep = ' ') %>%
mutate(length = case_when(trial_name == 'cloze' ~ str_length(acceptable),
TRUE ~ str_length(exact)),
dist = case_when(trial_name == 'cloze' ~ stringdist(acceptable, response, method = 'lv'),
TRUE ~ stringdist(exact, response, method = 'lv'))) %>%
mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(study, participant, item) %>%
summarize(itm_score = max(itm_score)) %>%
ungroup()
lev <- ct %>%
separate_rows(acceptable, sep = ' ') %>%
mutate(length = str_length(exact),
dist = stringdist(exact, response, method = 'lv')) %>%
mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(study, participant, item) %>%
summarize(itm_score = max(itm_score)) %>%
ungroup()
check <- lev %>%
group_by(study, group, participant, ppt_score) %>%
summarise() %>%
ungroup()
lev <- ct %>%
mutate(length = str_length(exact),
dist = stringdist(exact, response, method='lv')) %>%
mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(study, group, participant) %>%
mutate(ppt_score = mean(itm_score)) %>%
ungroup()
check <- lev %>%
group_by(study, group, participant, ppt_score) %>%
summarise() %>%
ungroup()
plot <- lev %>%
filter(participant != 'researcher') %>%
group_by(study, group, participant) %>%
summarise(mean = mean(itm_score)) %>%
ungroup()
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=group, y=mean*100, fill=group, label=participant))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=group, y=mean*100, fill=group, label=participant))
s <- list(
geom_hline(yintercept=50),
geom_violin(fill = 'lightblue'),
geom_boxplot(width = .1, fill='white'),
#geom_jitter(size=1, shape=1, alpha=.25, position = position_jitter(seed=2, width=.15)),
#geom_text(size = 2.5, col = "black", position = position_jitter(seed=2)),
theme_classic(),
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'), labels = c('ENS', 'KLE', 'MLE')),
scale_y_continuous(name="% accuracy",
limits=c(0, 100)),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide")
)
p1 + s
lev <- ct %>%
separate_rows(acceptable, sep = ' ') %>%
mutate(length = str_length(exact),
dist = stringdist(exact, response, method = 'lv')) %>%
mutate(diff = length - dist) %>%
mutate(diff = case_when(diff < 0 ~ 0,
TRUE ~ diff)) %>%
mutate(itm_score = diff / length) %>%
group_by(study, group, participant, item) %>%
summarize(itm_score = max(itm_score)) %>%
ungroup()
check <- lev %>%
group_by(study, group, participant, ppt_score) %>%
summarise() %>%
ungroup()
check <- lev %>%
group_by(study, group, participant, itm_score) %>%
summarise() %>%
ungroup()
plot <- lev %>%
filter(participant != 'researcher') %>%
group_by(study, group, participant) %>%
summarise(mean = mean(itm_score)) %>%
ungroup()
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=group, y=mean*100, fill=group, label=participant))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=group, y=mean*100, fill=group, label=participant))
s <- list(
geom_hline(yintercept=50),
geom_violin(fill = 'lightblue'),
geom_boxplot(width = .1, fill='white'),
#geom_jitter(size=1, shape=1, alpha=.25, position = position_jitter(seed=2, width=.15)),
#geom_text(size = 2.5, col = "black", position = position_jitter(seed=2)),
theme_classic(),
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'), labels = c('ENS', 'KLE', 'MLE')),
scale_y_continuous(name="% accuracy",
limits=c(0, 100)),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide")
)
p1 + s
p2 + s
proficiency <- ct %>%
group_by(study, group, participant) %>%
summarise(accuracy = mean(accuracy, na.rm=T)) %>%
ungroup()
View(proficiency)
proficiency <- ct %>%
group_by(study, group, participant) %>%
summarise(proficiency = mean(accuracy, na.rm=T)) %>%
ungroup()
# summarise data for plotting
plot <- ep %>%
filter(cond %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption')))
ep <- df %>%
filter(task == 'ept') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
# summarise data for plotting
plot <- ep %>%
filter(cond %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption')))
# summarise data for plotting
plot <- ep %>%
filter(condition %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption')))
plot <- plot %>%
complete(type, nesting(study, group, participant), fill = list(prop = 0, n = 0)) %>%
select(study, group, participant, type, n, prop) %>%
arrange(study, group, participant, type, prop)
plot <- plot %>%
left_join(proficiency, by = c('study', 'group', 'participant')) %>%
filter(proficiency != 'NA') %>%
filter(type == 'resumption')
# facet labels
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
# generate plot
ggplot(plot, aes(x=proficiency, y=prop)) +
geom_smooth(method=lm, col="#785ef0") +
geom_point(shape = 1) +
theme_classic() +
scale_x_continuous(name='proficiency') +
scale_y_continuous(name="% resumption", limits = c(0, 50)) +
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right") +
facet_wrap(study~group, labeller = as_labeller(groups))
# generate plot
ggplot(plot, aes(x=proficiency, y=prop)) +
geom_smooth(method=lm, col="#785ef0") +
geom_point(shape = 1) +
theme_classic() +
scale_x_continuous(name='proficiency') +
scale_y_continuous(name="% resumption", limits = c(0, 50)) +
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right") +
facet_wrap(~group, labeller = as_labeller(groups))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(0, 50)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency, y=prop))
p1 + s
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(0, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=4, dpi=600)
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=3, dpi=600)
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=3, dpi=600)
p2 + s
ggsave("plots/src/ept_proficiency.png", width=6.5, height=3, dpi=600)
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency*100, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency*100, y=prop))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=3, dpi=600)
p2 + s
ggsave("plots/src/ept_proficiency.png", width=6.5, height=3, dpi=600)
View(ep)
plot <- ep %>%
filter(condition %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant, environment) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant, environment) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption')))
plot <- plot %>%
complete(type, nesting(study, group, participant, environment), fill = list(prop = 0, n = 0)) %>%
select(study, group, environment, participant, type, n, prop) %>%
arrange(study, group, environment, participant, type, prop)
plot <- plot %>%
left_join(proficiency, by = c('study', 'group', 'participant')) %>%
filter(proficiency != 'NA') %>%
filter(type == 'resumption')
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency*100, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency*100, y=prop))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(environment~group, labeller = as_labeller(groups))
)
p1 + s
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE',
`short` = 'short', `long` = 'long', `island` = 'island')
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency*100, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency*100, y=prop))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_grid(environment~group, labeller = as_labeller(groups))
)
p1 + s
plot <- ep %>%
filter(condition %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant, environment) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant, environment) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption'))) %>%
mutate(environment = factor(environment, levels = c('short', 'long', 'island')))
plot <- plot %>%
complete(type, nesting(study, group, participant, environment), fill = list(prop = 0, n = 0)) %>%
select(study, group, environment, participant, type, n, prop) %>%
arrange(study, group, environment, participant, type, prop)
plot <- plot %>%
left_join(proficiency, by = c('study', 'group', 'participant')) %>%
filter(proficiency != 'NA') %>%
filter(type == 'resumption')
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE',
`short` = 'short', `long` = 'long', `island` = 'island')
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency*100, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency*100, y=prop))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_grid(environment~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=3, dpi=600)
p2 + s
ggsave("plots/src/ept_proficiency.png", width=6.5, height=3, dpi=600)
plot <- ep %>%
filter(condition %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(type = case_when(type == 'gap' ~ 'gap',
type == 'resumption' ~ 'resumption',
TRUE ~ 'other')) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, participant) %>%
count(type) %>%
ungroup() %>%
group_by(study, group, participant) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'other', 'resumption')))
plot <- plot %>%
complete(type, nesting(study, group, participant), fill = list(prop = 0, n = 0)) %>%
select(study, group, participant, type, n, prop) %>%
arrange(study, group, participant, type, prop)
plot <- plot %>%
left_join(proficiency, by = c('study', 'group', 'participant')) %>%
filter(proficiency != 'NA') %>%
filter(type == 'resumption')
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=proficiency*100, y=prop))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=proficiency*100, y=prop))
s <- list(
geom_smooth(method=lm, col="#785ef0"),
geom_point(shape = 1),
theme_classic(),
scale_x_continuous(name='proficiency'),
scale_y_continuous(name="% resumption", limits = c(-5, 100)),
scale_fill_manual(name='group', values=c("#9b82f3", "#00a78f")),
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "right"),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
p1 + s
ggsave("plots/orc/ept_proficiency.png", width=6.5, height=3, dpi=600)
p2 + s
ggsave("plots/src/ept_proficiency.png", width=6.5, height=3, dpi=600)
# simple regression analysis
md <- plot %>% filter(group == 'english' & study == '210510_do')
cor(md$accuracy, md$prop)
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
# simple regression analysis
md <- plot %>% filter(group == 'korean' & study == '210510_do')
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
# simple regression analysis
md <- plot %>% filter(group == 'mandarin' & study == '210510_do')
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
# simple regression analysis
md <- plot %>% filter(group == 'english' & study == '210510_su')
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
# simple regression analysis
md <- plot %>% filter(group == 'korean' & study == '210510_su')
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
# simple regression analysis
md <- plot %>% filter(group == 'mandarin' & study == '210510_su')
cor(md$proficiency, md$prop)
model <- lm(prop ~ proficiency, data = md)
summary(model)
