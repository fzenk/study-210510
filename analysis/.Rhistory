facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray70', 'gray80', '#ffb000')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray60', 'gray80', '#ffb000')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray60', 'gray90', '#ffb000')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray60', 'gray85', '#ffb000')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_barplot_with_nontarget.png", width=6.5, height=2.5, dpi=600)
p2 + s
ggsave("plots/src/ept_barplot_with_nontarget.png", width=6.5, height=2.5, dpi=600)
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray60', 'gray85', '#ffb000'), labels = c('gap', 'nontarget', 'restructure', 'resumption')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_barplot_with_nontarget.png", width=6.5, height=2.5, dpi=600)
p2 + s
ggsave("plots/src/ept_barplot_with_nontarget.png", width=6.5, height=2.5, dpi=600)
p1 + s
ggsave("plots/orc/ept_barplot_with_nontarget.png", width=6.5, height=3, dpi=600)
p2 + s
ggsave("plots/src/ept_barplot_with_nontarget.png", width=6.5, height=3, dpi=600)
p1 + s
ggsave("plots/orc/ept_barplot_with_nontarget.png", width=6.5, height=2.75, dpi=600)
p2 + s
ggsave("plots/src/ept_barplot_with_nontarget.png", width=6.5, height=2.75, dpi=600)
temp <- ep %>%
filter(type != 'nontarget') %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup()
temp <- ep %>%
filter(type != 'nontarget') %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup()
plot <- ep %>%
filter(participant %in% temp$participant) %>%
filter(is.na(condition) == FALSE) %>%
mutate(type = as.character(type)) %>%
group_by(study, group, condition) %>%
count(type) %>%
ungroup() %>%
complete(type, nesting(condition), fill = list(n = 0)) %>%
group_by(study, group, condition) %>%
mutate(sum = sum(n)) %>%
ungroup() %>%
mutate(prop = (n/sum)*100) %>%
mutate(prc = as.character(round(prop))) %>%
mutate(prc = as.numeric(case_when(prc == '0' ~ NA_character_, TRUE ~ prc))) %>%
mutate(type = factor(type, levels = c('gap', 'nontarget', 'other', 'resumption')))
groups <- c(`english` = 'ENS', `korean` = 'KLE', `mandarin` = 'MLE')
p1 <- ggplot(data=filter(plot, study == '210510_do'), aes(x=condition, y=prop, group=type, fill=type, label=prc))
p2 <- ggplot(data=filter(plot, study == '210510_su'), aes(x=condition, y=prop, group=type, fill=type, label=prc))
s <- list(
geom_bar(stat = "identity", col = "black", width = .5, alpha=.8),
geom_text(size = 3, col = "black", position = position_stack(vjust = 0.5)),
theme_classic(),
scale_x_discrete(name="environment", limits = c('cond1', 'cond2', 'cond3'), labels = c('short', 'long', 'island')),
scale_y_continuous(name="% responses", limits=c(0, 101), breaks=c(0, 20, 40, 60, 80, 100)),
scale_fill_manual(name="dependency", values=c('#648fff', 'gray60', 'gray85', '#ffb000'), labels = c('gap', 'nontarget', 'restructure', 'resumption')),
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin=margin(1, 1, 1, 1)),
facet_wrap(~group, labeller = as_labeller(groups))
)
p1 + s
ggsave("plots/orc/ept_barplot_with_nontarget.png", width=6.5, height=2.75, dpi=600)
p2 + s
ggsave("plots/src/ept_barplot_with_nontarget.png", width=6.5, height=2.75, dpi=600)
temp <- ep %>%
filter(type != 'nontarget') %>%
group_by(study, group, participant) %>%
summarise() %>%
ungroup()
md <- ep %>%
filter(participant %in% temp$participant)
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group))
View(md)
md <- ep %>%
filter(participant %in% temp$participant)
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
md2 <- md %>%
filter(group == 'english') %>%
filter(condition %in% c('cond1', 'cond2', 'cond3')) %>%
mutate(condition = fct_drop(condition))
md2 <- md2 %>%
filter(type %in% c('gap', 'resumption'))
# view contrasts
contrasts(md2$environment)
model1 <- glmer(resumption ~ environment + (environment|participant) + (environment|item),
data = md2, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(study == '210510_do' & group == 'english' & is.na(condition) == FALSE) %>%
mutate(condition = fct_drop(condition))
md2 <- md2 %>%
filter(type %in% c('gap', 'resumption'))
# view contrasts
contrasts(md2$environment)
model1 <- glmer(resumption ~ environment + (environment|participant) + (environment|item),
data = md2, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beepr::beep(1)
md <- ep %>%
filter(participant %in% temp$participant)
md <- md %>%
mutate(resumption = case_when(type == 'resumption' ~ TRUE,
TRUE ~ FALSE)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(group = fct_drop(group)) %>%
mutate(environment = fct_relevel(environment, 'long', 'short', 'island'))
md2 <- md %>%
filter(study == '210510_do' & group == 'english' & is.na(condition) == FALSE) %>%
mutate(condition = fct_drop(condition))
md2 <- md2 %>%
filter(type %in% c('gap', 'resumption'))
# view contrasts
contrasts(md2$environment)
model1 <- glmer(resumption ~ environment + (environment|participant) + (environment|item),
data = md2, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(study == '210510_do' & group == 'korean' & is.na(condition) == FALSE) %>%
mutate(condition = fct_drop(condition))
md2 <- md2 %>%
filter(type %in% c('gap', 'resumption'))
# view contrasts
contrasts(md2$environment)
model1 <- glmer(resumption ~ environment + (environment|participant) + (environment|item),
data = md2, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beepr::beep(1)
md2 <- md %>%
filter(study == '210510_do' & group == 'mandarin' & is.na(condition) == FALSE) %>%
mutate(condition = fct_drop(condition))
md2 <- md2 %>%
filter(type %in% c('gap', 'resumption'))
# view contrasts
contrasts(md2$environment)
model1 <- glmer(resumption ~ environment + (environment|participant) + (environment|item),
data = md2, family = binomial, glmerControl(optimizer = "bobyqa"))
summary(model1)
beepr::beep(1)
check <- df %>%
filter(task == 'sprt') %>%
group_by(participant) %>%
summarise() %>%
ungroup()
# create dataframe for reading time data
spr_stimulus <- df %>%
filter(task == 'sprt') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
# create dataframe for reading time data
spr <- df %>%
filter(task == 'sprt') %>%
arrange(study, group, participant) %>%
select_if(function(x){!all(is.na(x))})
View(spr)
check <- spr %>%
group_by(condition) %>%
summarise() %>%
ungroup()
View(check)
# filter to critical trials
ds <- spr %>%
filter(!condition %in% c('grammatical', 'ungrammatical')) %>%
mutate(rt = as.numeric(as.character(rt)),
participant = as.factor(participant))
# run fct_drop on 'participant'
ds <- ds %>%
mutate(participant = fct_drop(participant))
# check participants
check <- ds %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
View(check)
# trim based on rt
trim <- ds %>%
filter(rt <= 3000) %>%
filter(rt >= 200) %>%
group_by(study, group, condition, region) %>%
mutate(sd2 = mean(rt, na.rm=T) + (2 * (sd(rt, na.rm=T)))) %>%
ungroup() %>%
mutate(rt = case_when(rt > sd2 ~ sd2, TRUE ~ as.numeric(rt))) %>%
select(-sd2)
# inspect accuracy rates
ggplot(ds, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
View(ds)
# inspect accuracy rates
ggplot(ds, aes(x=group, y=mean(as.logical(accuracy)), fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
plot <- ds %>%
group_by(study, group, participant) %>%
summarise(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
# inspect accuracy rates
ggplot(plot, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
# trim based on rt
trim <- ds %>%
filter(rt <= 3000) %>%
filter(rt >= 200) %>%
group_by(study, group, condition, region) %>%
mutate(sd2 = mean(rt, na.rm=T) + (2 * (sd(rt, na.rm=T)))) %>%
ungroup() %>%
mutate(rt = case_when(rt > sd2 ~ sd2, TRUE ~ as.numeric(rt))) %>%
select(-sd2) %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
# inspect accuracy rates
ggplot(trip, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
# inspect accuracy rates
ggplot(trim, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
# trim based on rt
trim <- ds %>%
filter(rt <= 3000) %>%
filter(rt >= 200) %>%
group_by(study, group, condition, region) %>%
mutate(sd2 = mean(rt, na.rm=T) + (2 * (sd(rt, na.rm=T)))) %>%
ungroup() %>%
mutate(rt = case_when(rt > sd2 ~ sd2, TRUE ~ as.numeric(rt))) %>%
select(-sd2) %>%
group_by(study, group, participant) %>%
mutate(acc_rate = mean(as.logical(accuracy))) %>%
ungroup()
plot <- trim %>%
group_by(study, group, participant, acc_rate) %>%
summarise() %>%
ungroup()
# inspect accuracy rates
ggplot(plot, aes(x=group, y=acc_rate, fill=group, label=participant)) +
geom_hline(yintercept=.5) +
geom_violin() +
geom_boxplot(width = .1, fill='white') +
theme_classic() +
scale_x_discrete(name="group",
limits = c('english', 'korean', 'mandarin'),
labels = c('ENS', 'KLE', 'MLE')) +
scale_y_continuous(name="accuracy rate",
limits=c(0, 1)) +
theme(text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = .5),
legend.position = "hide") +
facet_wrap(~study)
# trim based on accuracy
trim <- trim %>%
filter(acc_rate > .5)
# check participants
check <- trim %>%
group_by(group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
# check participants
check <- trim %>%
group_by(study, group, participant) %>%
summarise() %>%
summarise(n = n()) %>%
ungroup()
View(check)
# summarise data for plotting by group
plot <- trim %>%
mutate(environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island')) %>%
group_by(study, group, region, dependency, environment, cond) %>%
summarise(mean_rt = mean(rt, na.rm=T),
sd = sd(rt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
# add_row(group = 'english', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'english', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'english', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
# add_row(group = 'korean', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'korean', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'korean', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
filter(region %in% c(9, 10, 11, 12, 13, 14)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
# create plot
ggplot(data=plot, aes(x=region, y=mean_rt, group=cond, col=cond, shape=cond)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 1000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nMary', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="condition", values=c('#0072c3', '#007d79', '#d02670', '#0072c3', '#007d79', '#d02670'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_shape_manual(name="condition", values=c(16, 16, 16, 15, 15, 15), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_linetype_manual(name="condition", values=c('dashed', 'dashed', 'dashed', 'solid', 'solid', 'solid'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(study~group)
# create plot
ggplot(data=plot, aes(x=region, y=mean_rt, group=condition, col=condition, shape=condition)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 1000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nMary', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="condition", values=c('#0072c3', '#007d79', '#d02670', '#0072c3', '#007d79', '#d02670'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_shape_manual(name="condition", values=c(16, 16, 16, 15, 15, 15), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_linetype_manual(name="condition", values=c('dashed', 'dashed', 'dashed', 'solid', 'solid', 'solid'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(study~group)
# summarise data for plotting by group
plot <- trim %>%
mutate(environment = as.factor(environment)) %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island')) %>%
group_by(study, group, region, dependency, environment, condition) %>%
summarise(mean_rt = mean(rt, na.rm=T),
sd = sd(rt, na.rm=T),
n = n()) %>%
mutate(se = sd / sqrt(n),
ci = qt(1 - (0.05 / 2), n - 1) * se) %>%
ungroup() %>%
# add_row(group = 'english', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'english', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'english', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
# add_row(group = 'korean', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'korean', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'korean', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond1", dependency = 'gap', environment = 'short') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond2", dependency = 'gap', environment = 'long') %>%
# add_row(group = 'mandarin', region = "11", cond = "cond3", dependency = 'gap', environment = 'island') %>%
filter(region %in% c(9, 10, 11, 12, 13, 14)) %>%
filter(group %in% c('english', 'korean', 'mandarin')) %>%
mutate(panel = case_when(group == 'english' ~ 'ENS',
group == 'korean' ~ 'KLE',
group == 'mandarin' ~ 'MLE'))
# create plot
ggplot(data=plot, aes(x=region, y=mean_rt, group=condition, col=condition, shape=condition)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 1000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nMary', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="condition", values=c('#0072c3', '#007d79', '#d02670', '#0072c3', '#007d79', '#d02670'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_shape_manual(name="condition", values=c(16, 16, 16, 15, 15, 15), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_linetype_manual(name="condition", values=c('dashed', 'dashed', 'dashed', 'solid', 'solid', 'solid'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_wrap(study~group)
# create plot
ggplot(data=plot, aes(x=region, y=mean_rt, group=condition, col=condition, shape=condition)) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 1000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nMary', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="condition", values=c('#0072c3', '#007d79', '#d02670', '#0072c3', '#007d79', '#d02670'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_shape_manual(name="condition", values=c(16, 16, 16, 15, 15, 15), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
scale_linetype_manual(name="condition", values=c('dashed', 'dashed', 'dashed', 'solid', 'solid', 'solid'), labels=c('short, gap', 'long, gap', 'island, gap', 'short, RP', 'long, RP', 'island, RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_grid(study~group)
# facet by environment
plot <- plot %>%
mutate(environment = fct_relevel(environment, 'short', 'long', 'island'))
ggplot(data=plot, aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency)) +
annotate("rect", xmin = 3.5, xmax = 5.5, ymin = 0, ymax = 1000, alpha = .2) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 2000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nofficers', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'RP')) +
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_grid(group~environment)
ggplot(data=plot, aes(x=region, y=mean_rt, group=dependency, col=dependency, shape=dependency)) +
annotate("rect", xmin = 3.5, xmax = 5.5, ymin = 0, ymax = 1000, alpha = .2) +
geom_line(lwd=1) +
geom_point(size=2) +
geom_errorbar(aes(ymin=mean_rt-ci, ymax=mean_rt+ci), width=.2, lwd=1, linetype=1) +
theme_classic() +
scale_y_continuous(name="mean reading time (ms)", limits=c(0, 2000)) +
scale_x_discrete(name="region", limits=c("9", "10", "11", "12", "13", "14"), labels=c('9\nofficers', '10\narrested', '11\n(him)', '12\nat', '13\nthe', '14\nend')) +
scale_colour_manual(name="dependency", values=c('#648fff', '#ffb000'), labels=c('gap', 'RP')) +
scale_shape_manual(name="dependency", values=c(16, 15), labels=c('gap', 'RP')) +
theme(text = element_text(size = 12), plot.title = element_text(size = 12, hjust = .5), legend.position = "right", legend.margin = margin(1, 1, 1, -5)) +
facet_grid(study~group~environment)
